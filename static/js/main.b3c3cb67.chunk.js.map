{"version":3,"sources":["serviceWorker.ts","constants/messages.ts","components/ListItem.tsx","components/Title.tsx","components/Deposits.tsx","constants/common.ts","components/Dashboard.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","messages","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","Title","props","Typography","component","variant","color","gutterBottom","children","preventDefault","event","useStyles","makeStyles","depositContext","flex","Deposits","classes","Fragment","className","Link","href","onClick","MEDIA_URLS","Copyright","align","Date","getFullYear","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","React","useState","open","setOpen","fixedHeightPaper","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","Drawer","Divider","List","Container","maxWidth","aria-hidden","Grid","item","xs","md","lg","Paper","Box","pt","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3c3cb67.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const messages = {\n  \"drawer.listItem1\": \"Home\",\n  \"drawer.listItem2\": \"Resume\",\n  \"drawer.listItem3\": \"Projects\",\n  \"drawer.listItem4\": \"Tech stack\",\n  \"drawer.listItem5\": \"Contact\",\n}","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport { messages } from '../constants/messages';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary={messages[\"drawer.listItem1\"]} />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary={messages[\"drawer.listItem2\"]} />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary={messages[\"drawer.listItem3\"]} />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary={messages[\"drawer.listItem4\"]} />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary={messages[\"drawer.listItem5\"]} />\n    </ListItem>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","export const MEDIA_URLS = {\n  TWITTER: \"https://twitter.com/scorncer17\",\n  LINKEDIN: \"https://www.linkedin.com/in/yash-agrawal-aa436135/\",\n  GITHUB: \"https://github.com/Yash17Agrawal/\",\n  STACKOVERFLOW: \"https://stackoverflow.com/users/6627786/yash-agrawal\",\n  MEDIUM: \"https://medium.com/@yash17ag\"\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { mainListItems } from './ListItem';\nimport Deposits from './Deposits';\nimport { MEDIA_URLS } from '../constants/common';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'No © copyright issues'}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Dashboard\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <ul>\n            <li>\n              <a href={MEDIA_URLS.TWITTER} aria-label=\"Twitter\"   >\n                <i className=\"fab fa-twitter fa-2x\" aria-hidden=\"true\"></i>\n              </a>\n            </li>\n            <li>\n              <a href={MEDIA_URLS.GITHUB} aria-label=\"Github\"   >\n                <i className=\"fab fa-github fa-2x\" aria-hidden=\"true\"></i>\n              </a>\n            </li>\n            <li>\n              <a href={MEDIA_URLS.LINKEDIN} aria-label=\"Linkedin\"   >\n                <i className=\"fab fa-linkedin fa-2x\" aria-hidden=\"true\"></i>\n              </a>\n            </li>\n\n            <li>\n              <a href={MEDIA_URLS.STACKOVERFLOW} aria-label=\"Stackoverflow\"   >\n                <i className=\"fab fa-stack-overflow fa-2x\" aria-hidden=\"true\"></i>\n              </a>\n            </li>\n\n            <li>\n              <a href={MEDIA_URLS.MEDIUM} aria-label=\"Medium\"   >\n                <i className=\"fab fa-medium fa-2x\" aria-hidden=\"true\"></i>\n              </a>\n            </li>\n\n          </ul>\n          <Grid container spacing={3}>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n\n                <Deposits />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Dashboard from './components/Dashboard';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}