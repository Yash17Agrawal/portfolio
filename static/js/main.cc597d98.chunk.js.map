{"version":3,"sources":["assets/profilephoto.jpg","assets/stackoverflow.svg","assets/medium.svg","assets/background.jpg","assets/book.jpg","serviceWorker.ts","constants/common.ts","components/AboutMe.tsx","components/Dashboard.tsx","components/WithHeaderFooter.tsx","components/Books.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","MEDIA_URLS","APP_URLS","AboutMe","className","Typography","IconButton","href","src","StackoverflowIcon","MediumIcon","Link","dp","require","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","classes","a11yProps","LinkTab","Tab","component","onClick","event","preventDefault","useStyles","makeStyles","theme","root","display","flexDirection","height","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","appBarSpacer","container","paddingTop","spacing","paddingBottom","paper","overflow","fixedHeight","Dashboard","React","useState","setValue","CssBaseline","Toolbar","Tabs","variant","onChange","newValue","aria-label","label","Button","background","Container","maxWidth","withHeaderFooter","Component","this","Books","Fragment","color","booksImage","List","author","url","map","book","ListItem","button","ListItemIcon","ListItemText","primary","routes","StrictMode","basename","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,2NCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sIClBOC,EACF,iCADEA,EAED,qDAFCA,EAGH,oCAHGA,EAII,uDAJJA,EAKH,+BAGGC,EACN,IADMA,EAEL,S,8GCyEOC,EAjEC,WAkBd,OACE,yBAAKC,UAAU,YACb,6BAASA,UAAU,QACjB,yCACA,kBAACC,EAAA,EAAD,qDAEA,kBAACA,EAAA,EAAD,mRAUA,yBAAKD,UAAU,YACb,kBAACE,EAAA,EAAD,CAAYC,KAAMN,GAChB,kBAAC,IAAD,OAEF,kBAACK,EAAA,EAAD,CAAYC,KAAMN,GAChB,kBAAC,IAAD,OAEF,kBAACK,EAAA,EAAD,CAAYC,KAAMN,GAChB,kBAAC,IAAD,OAIF,kBAACK,EAAA,EAAD,CAAYC,KAAMN,EAA0BG,UAAU,SACpD,yBAAKI,IAAKC,OAEZ,kBAACH,EAAA,EAAD,CAAYC,KAAMN,EAAmBG,UAAU,IAC7C,yBAAKI,IAAKE,QAGd,kBAACC,EAAA,EAAD,CAAMJ,KAAML,GAAZ,iBAIF,6BAASE,UAAU,SACjB,yBAAKI,IAAKI,IAAIR,UAAU,U,iBCzDfS,EAAQ,IASzB,SAASC,EAASC,GAAuB,IAC/BC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,EADG,YACOJ,EADP,8BAGtC,OACE,uCACEK,KAAK,WACLhB,UAAU,QACViB,OAAQJ,IAAUC,EAClBI,GAAE,uBAAkBJ,GACpBK,kBAAA,kBAA4BL,IACxBC,GAEHF,IAAUC,GACT,kBAACM,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACpB,EAAA,EAAD,CAAYD,UAAS,UAAKW,EAAMW,UAAYV,KAOtD,SAASW,EAAUT,GACjB,MAAO,CACLI,GAAG,WAAD,OAAaJ,GACf,gBAAgB,gBAAhB,OAAiCA,IAQrC,SAASU,EAAQb,GACf,OACE,kBAACc,EAAA,EAAD,eACEC,UAAU,IACVC,QAAS,SAACC,GACRA,EAAMC,mBAEJlB,IAKV,IAEMmB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,OAAQ,QAEVC,QAAS,CACPC,aAAc,IAEhBC,YAAY,aACVL,QAAS,OACTM,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNV,EAAMW,OAAON,SAElBO,OAAQ,CACNC,OAAQb,EAAMa,OAAOC,OAAS,EAC9BC,WAAYf,EAAMgB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQlB,EAAMgB,YAAYE,OAAOC,MACjCC,SAAUpB,EAAMgB,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WA1BgB,IA2BhBC,MAAM,eAAD,OA3BW,IA2BX,OACLT,WAAYf,EAAMgB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQlB,EAAMgB,YAAYE,OAAOC,MACjCC,SAAUpB,EAAMgB,YAAYI,SAASK,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChB1B,QAAS,QAEX2B,MAAO,CACLC,SAAU,GAEZC,aAAc/B,EAAMW,OAAON,QAM3B2B,UAAW,CACTC,WAAYjC,EAAMkC,QAAQ,GAC1BC,cAAenC,EAAMkC,QAAQ,IAE/BE,MAAO,CACL1B,QAASV,EAAMkC,QAAQ,GACvBhC,QAAS,OACTmC,SAAU,OACVlC,cAAe,UAEjBmC,YAAa,CACXlC,OAAQ,SAIG,SAASmC,IACtB,IAAMjD,EAAUQ,IADkB,EAER0C,IAAMC,SAAS,GAFP,mBAE3B5D,EAF2B,KAEpB6D,EAFoB,KAQlC,OACE,yBAAK1E,UAAWsB,EAAQW,MACtB,kBAAC0C,EAAA,EAAD,MAEA,kBAACC,EAAA,EAAD,CAAS5E,UAAWsB,EAAQe,SAI1B,kBAACwC,EAAA,EAAD,CACEC,QAAQ,YACRjE,MAAOA,EACPkE,SAfa,SAACnD,EAA8BoD,GAClDN,EAASM,IAeHC,aAAW,oBACX,kBAACzD,EAAD,eAAS0D,MAAM,UAAU/E,KAAK,WAAcoB,EAAU,KACtD,kBAACC,EAAD,eAAS0D,MAAM,WAAW/E,KAAK,UAAaoB,EAAU,KACtD,kBAACC,EAAD,eAAS0D,MAAM,YAAe3D,EAAU,OAK5C,kBAACb,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAAGQ,QAAQ,WACxC,kBAACrB,EAAA,EAAD,sBAEG,4CACD,0DACA,+OACA,kBAACkF,EAAA,EAAD,CAAQL,QAAQ,aACd,uBAAG3E,KAAK,kCAAR,kBAEJ,yBAAKC,IAAKgF,IAAYpF,UAAU,kBAElC,kBAACU,EAAD,CAAUG,MAAOA,EAAOC,MAAO,GAE7B,kBAAC,EAAD,OAEF,kBAACJ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,GAC7B,kBAACuE,EAAA,EAAD,CAAWC,SAAS,KAAKtF,UAAS,UAAKsB,EAAQ0C,YAA/C,iCAEE,kBAACzD,EAAA,EAAD,CAAMJ,KAAK,oCAAX,gB,oCClLK,SAASoF,GAAoBC,GAE1C,8KAEI,OACE,oCACE,kBAACA,EAAcC,KAAK9E,YAJ5B,GAAqB6D,IAAMgB,W,gHC2EdE,GArED,WAoCZ,OAAO,kBAAC,IAAMC,SAAP,KAEL,kBAACf,EAAA,EAAD,KACE,kBAAC1E,EAAA,EAAD,CAAYC,KAAK,KACf,kBAAC,KAAD,CAAUyF,MAAM,gBAIpB,kBAACP,EAAA,EAAD,CAAWrF,UAAU,SACnB,yBAAKI,IAAKyF,OADZ,oBAGE,kBAACC,GAAA,EAAD,CAAMpE,UAAU,MAAMuD,aAAW,wBA9CvB,CACZ,CACEpB,MAAO,gCACPkC,OAAQ,eACRC,IAAK,2BAEP,CACEnC,MAAO,kBACPkC,OAAQ,iBACRC,IAAK,2BAEP,CACEnC,MAAO,cACPkC,OAAQ,aACRC,IAAK,2BAEP,CACEnC,MAAO,YACPkC,OAAQ,gBACRC,IAAK,2BAEP,CACEnC,MAAO,YACPkC,OAAQ,gBACRC,IAAK,2BAEP,CACEnC,MAAO,YACPkC,OAAQ,gBACRC,IAAK,4BAmBKC,KAAI,SAACC,EAAMpF,GACf,OAAO,kBAACqF,GAAA,EAAD,CAAUC,QAAM,EAACjG,KAAM+F,EAAKF,KACjC,kBAACK,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAO,UAAKzF,EAAQ,EAAb,aAAmBoF,EAAKrC,MAAxB,eAAoCqC,EAAKH,kBCvDtES,GACJ,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAQC,SAAS,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAM7G,EAAgB4B,UAAW6D,GAAiBG,MACzD,kBAAC,IAAD,CAAOiB,KAAM7G,EAAe4B,UAAW6D,GAAiBhB,KACxD,kBAAC,IAAD,CAAOoC,KAAM,IAAKjF,UAAW6D,GAAiBhB,QAMtDqC,IAASC,OACPL,GACAM,SAASC,eAAe,SNmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.cc597d98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilephoto.39cb8d47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/stackoverflow.92d70dec.svg\";","module.exports = __webpack_public_path__ + \"static/media/medium.38004ce1.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.1b58f3e0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/book.02d040a1.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const MEDIA_URLS = {\n  TWITTER: \"https://twitter.com/scorncer17\",\n  LINKEDIN: \"https://www.linkedin.com/in/yash-agrawal-aa436135/\",\n  GITHUB: \"https://github.com/Yash17Agrawal/\",\n  STACKOVERFLOW: \"https://stackoverflow.com/users/6627786/yash-agrawal\",\n  MEDIUM: \"https://medium.com/@yash17ag\"\n}\n\nexport const APP_URLS = {\n  root: `/`,\n  books: `/books`\n}","import React from 'react';\nimport { Typography, Link, IconButton, Icon, Button, SvgIcon } from '@material-ui/core';\nimport { MEDIA_URLS, APP_URLS } from '../constants/common';\nimport dp from '../assets/profilephoto.jpg';\nimport './aboutMe.scss';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport StackoverflowIcon from '../assets/stackoverflow.svg';\nimport MediumIcon from '../assets/medium.svg';\nimport NewIcon from '../SOIcon';\n\n\n// const stackoverflow = (\n//   <Icon>\n//     <img alt=\"edit\" src={StackoverflowIcon} />\n//   </Icon>\n// );\nconst AboutMe = () => {\n  // // Sets target=\"_blank\" rel=\"noopener noreferrer\" on external links\n  // const handleExternalLinks = () => {\n  //   const allLinks = Array.from(document.querySelectorAll('a'));\n  //   if (allLinks.length > 0) {\n  //     allLinks.forEach(link => {\n  //       if (link.host !== window.location.host) {\n  //         link.setAttribute('rel', 'noopener noreferrer');\n  //         link.setAttribute('target', '_blank');\n  //       }\n  //     });\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   handleExternalLinks();\n  // }, []);\n\n  return (\n    <div className=\"about-me\">\n      <section className=\"left\">\n        <h1> About Me</h1>\n        <Typography>\n          Hello! I am Yash, a software engineer.      </Typography>\n        <Typography>\n          I like to build software which makes things easier and helps people in general.\n          I always aim for a balanced approach between most efficient and quick solution.\n          \n          Here are few technologies I have been working recently. Reactjs, Spring boot, Django, AWS Sagemaker, Antlr\n      </Typography>\n        {/* <Button variant=\"contained\" startIcon={<GetAppIcon />}>\n\n        Download Resume\n          </Button> */}\n        <div className=\"external\">\n          <IconButton href={MEDIA_URLS.TWITTER}>\n            <TwitterIcon></TwitterIcon>\n          </IconButton>\n          <IconButton href={MEDIA_URLS.GITHUB}>\n            <GitHubIcon></GitHubIcon>\n          </IconButton>\n          <IconButton href={MEDIA_URLS.LINKEDIN}>\n            <LinkedInIcon />\n          </IconButton>\n          {/* <Button startIcon={stackoverflow}>\n          </Button> */}\n          <IconButton href={MEDIA_URLS.STACKOVERFLOW} className=\"stack\">\n            <img src={StackoverflowIcon}></img>\n          </IconButton>\n          <IconButton href={MEDIA_URLS.MEDIUM} className=\"\">\n            <img src={MediumIcon}></img>\n          </IconButton>\n        </div>\n        <Link href={APP_URLS.books}>\n          Books I read\n      </Link>\n      </section>\n      <section className=\"right\">\n        <img src={dp} className=\"dp\">\n        </img>\n      </section>\n    </div>\n  )\n}\n\nexport default AboutMe;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { MEDIA_URLS } from '../constants/common';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport './dashboard.scss';\nimport { Button, Link, IconButton } from '@material-ui/core';\nimport logo from '../assets/coming_soon.gif'\nimport AboutMe from './AboutMe';\nimport background from '../assets/background.jpg';\nimport AnimatedScreen from './AnimatedScreen/AnimatedScreen';\nimport YA from '../assets/YA.png';\nvar profilePic = require('../assets/profilephoto.jpg');\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n  classes?: string\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      className=\"panel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography className={`${props.classes}`}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\ninterface LinkTabProps {\n  label?: string;\n  href?: string;\n}\n\nfunction LinkTab(props: LinkTabProps) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%'\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  // content: {\n  //   flexGrow: 1,\n  //   height: '100vh',\n  //   overflow: 'auto',\n  // },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      {/* <AppBar position=\"absolute\" className={clsx(classes.appBar)}> */}\n      <Toolbar className={classes.toolbar}>\n        {/* <IconButton aria-label=\"home\" src>\n            <YA />\n          </IconButton> */}\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"nav tabs example\">\n          <LinkTab label=\"Profile\" href=\"/drafts\" {...a11yProps(0)} />\n          <LinkTab label=\"About Me\" href=\"/trash\" {...a11yProps(1)} />\n          <LinkTab label=\"Projects\" {...a11yProps(2)} />\n          {/* <Button variant=\"contained\">Resume</Button> */}\n        </Tabs>\n      </Toolbar>\n      {/* </AppBar> */}\n      <TabPanel value={value} index={0} classes=\"profile\">\n        <Typography>\n          Hi, my name is\n           <h1>Yash Agrawal</h1>\n          <h2>I build things in software</h2>\n          <h3>I'm a software engineer from Jaypee Noida, Btech with experience of working at multple roles in various projects from scratch till production and have been part of enterprise application development as well </h3>\n          <Button variant=\"contained\">\n            <a href=\"mailto:yash17agrawal@gmail.com\">Get In Touch</a></Button>\n        </Typography>\n        <img src={background} className=\"dashboard-bg\"></img>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {/* <img src={logo}></img> */}\n        <AboutMe></AboutMe>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Container maxWidth=\"lg\" className={`${classes.container}`}>\n          Original Page Coming Soon !!!!\n          <Link href=\"https://yash17blog.wordpress.com\">Wordpress</Link>\n        </Container>\n      </TabPanel>\n    </div>\n  );\n}","import React from 'react';\n// import StickyFooter from './StickyFooter/StickyFooter';\n\nexport default function withHeaderFooter<T>(Component: React.ComponentType<T>) {\n\n  return class extends React.Component<T> {\n    render() {\n      return (\n        <>\n          <Component {...this.props as T} />\n          {/* <StickyFooter></StickyFooter> */}\n        </>\n      );\n    }\n  };\n}\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport { Container, AppBar, Toolbar, IconButton } from '@material-ui/core';\nimport booksImage from '../assets/book.jpg';\nimport './books.scss';\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst Books = () => {\n  const books = [\n    {\n      title: \"The Monk who sold his ferrari\",\n      author: \"Robin Sharma\",\n      url: \"/linkedin or amazon url\"\n    },\n    {\n      title: \"The Kite Runner\",\n      author: \"Khaled Hoisine\",\n      url: \"/linkedin or amazon url\"\n    },\n    {\n      title: \"You can win\",\n      author: \"shiv Khera\",\n      url: \"/linkedin or amazon url\"\n    },\n    {\n      title: \"Elon Musk\",\n      author: \"Ashley Vanice\",\n      url: \"/linkedin or amazon url\"\n    },\n    {\n      title: \"Elon Musk\",\n      author: \"Ashley Vanice\",\n      url: \"/linkedin or amazon url\"\n    },\n    {\n      title: \"Elon Musk\",\n      author: \"Ashley Vanice\",\n      url: \"/linkedin or amazon url\"\n    },\n\n\n  ];\n\n  return <React.Fragment>\n    {/* <AppBar position=\"absolute\"> */}\n    <Toolbar >\n      <IconButton href=\"/\">\n        <HomeIcon color=\"secondary\"></HomeIcon>\n      </IconButton>\n    </Toolbar>\n    {/* </AppBar> */}\n    <Container className=\"books\">\n      <img src={booksImage}></img>\n      Books I have read\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        {\n          books.map((book, index) => {\n            return <ListItem button href={book.url}>\n              <ListItemIcon>\n                <MenuBookIcon />\n              </ListItemIcon>\n              <ListItemText primary={`${index + 1}. ${book.title} by ${book.author}`} />\n            </ListItem>\n          })\n        }\n\n        {/* <ListItem button href=\"#simple-list\">\n          <ListItemText primary=\"Spam\" />\n        </ListItem> */}\n      </List>\n\n      {/* <iframe src=\"https://www.linkedin.com/embed/feed/update/urn:li:share:6640652079776002048\" title=\" Embedded post\"></iframe> */}\n    </Container>\n  </React.Fragment>\n}\n\nexport default Books;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Dashboard from './components/Dashboard';\nimport withHeaderFooter from './components/WithHeaderFooter';\nimport Books from './components/Books';\nimport { APP_URLS } from './constants/common';\n\nconst routes = (\n  <React.StrictMode>\n    <Router basename=\"/\">\n      <Switch>\n        <Route path={APP_URLS.books} component={withHeaderFooter(Books)} />\n        <Route path={APP_URLS.root} component={withHeaderFooter(Dashboard)} />\n        <Route path={'/'} component={withHeaderFooter(Dashboard)} />\n      </Switch>\n    </Router>\n  </React.StrictMode>\n);\n\nReactDOM.render(\n  routes,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}